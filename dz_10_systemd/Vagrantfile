Vagrant.configure("2") do |config|
  config.vm.box = "generic/centos9s"

  config.vm.provider "virtualbox" do |vb|
    vb.name = "CentOS9CLI"
    vb.cpus = 2
    vb.memory = 4096
  end

  config.vm.provision "shell", inline: <<-SHELL
    # Создаем пользователя sishurupov
    useradd sishurupov
    echo "sishurupov:0880999" | chpasswd
    usermod -aG wheel sishurupov

    # Устанавливаем необходимые пакеты
    yum install -y epel-release
    yum install -y fcgiwrap nginx php php-fpm


    sudo setenforce 0
    firewall-cmd --permanent --add-port=9000/tcp
    firewall-cmd --permanent --add-port=8081/tcp
    firewall-cmd --permanent --add-port=8080/tcp
    firewall-cmd --reload

    # Создаем скрипт мониторинга логов
    wget "https://raw.githubusercontent.com/roman-rat/otus-roman/main/Lession%2010/scripts/1.sh"

    chmod +x 1.sh
    bash 1.sh

    chmod +x /usr/local/bin/log_monitor.sh

    # Создаем конфиг для log_monitor
    wget "https://raw.githubusercontent.com/roman-rat/otus-roman/main/Lession%2010/scripts/2.sh"

    chmod +x 2.sh
    bash 2.sh

    # Создаем systemd unit-файл для log_monitor
    wget "https://raw.githubusercontent.com/roman-rat/otus-roman/main/Lession%2010/scripts/3.sh"

    chmod +x 3.sh
    bash 3.sh

    systemctl enable log_monitor.service
    systemctl start log_monitor.service

    # Настройка и запуск fcgiwrap
    wget "https://raw.githubusercontent.com/roman-rat/otus-roman/main/Lession%2010/scripts/4.sh"

    chmod +x 4.sh
    bash 4.sh

    systemctl enable fcgiwrap
    systemctl start fcgiwrap

    # Дорабатываем nginx.service для нескольких инстансов
    wget "https://raw.githubusercontent.com/roman-rat/otus-roman/main/Lession%2010/scripts/5.sh"

    chmod +x 5.sh
    bash 5.sh

    # Создаем конфиги для двух инстансов Nginx
    cp /etc/nginx/nginx.conf /etc/nginx/nginx-instance1.conf
    cp /etc/nginx/nginx.conf /etc/nginx/nginx-instance2.conf

    # Настраиваем уникальные порты и PID-файлы для каждого инстанса
    sed -i 's|listen       80;|listen       8080;|g' /etc/nginx/nginx-instance1.conf
    sed -i 's|listen       \\[::\\]:80;|listen       \\[::\\]:8080;|g' /etc/nginx/nginx-instance1.conf
    sed -i 's|pid /run/nginx.pid;|pid /run/nginx-instance1.pid;|g' /etc/nginx/nginx-instance1.conf

    sed -i 's|listen       80;|listen       8081;|g' /etc/nginx/nginx-instance2.conf
    sed -i 's|listen       \\[::\\]:80;|listen       \\[::\\]:8081;|g' /etc/nginx/nginx-instance2.conf
    sed -i 's|pid /run/nginx.pid;|pid /run/nginx-instance2.pid;|g' /etc/nginx/nginx-instance2.conf

    # Создаем скрипт для добавления CGI-конфигурации
    wget "https://raw.githubusercontent.com/roman-rat/otus-roman/main/Lession%2010/scripts/6.sh"

    chmod +x 6.sh
    bash 6.sh

    # Скрипт для конфига проверки
    mkdir -p /usr/share/nginx/html/cgi-bin/
    wget "https://raw.githubusercontent.com/roman-rat/otus-roman/main/Lession%2010/scripts/7.sh"
    bash 7.sh
    chmod +x /usr/share/nginx/html/cgi-bin/test.cgi

    # Проверяем конфигурацию перед запуском
    nginx -t -c /etc/nginx/nginx-instance1.conf
    nginx -t -c /etc/nginx/nginx-instance2.conf

    # Веселые старты)
    systemctl enable nginx@instance1.service
    systemctl start nginx@instance1.service
    systemctl status nginx@instance1.service

    systemctl enable nginx@instance2.service
    systemctl start nginx@instance2.service
    systemctl status nginx@instance2.service

    systemctl restart fcgiwrap
    systemctl status fcgiwrap

    # Вывод для cgi при завершении вагранта
    curl http://localhost:8081/cgi-bin/test.cgi
    curl http://localhost:8080/cgi-bin/test.cgi
    # Вывод для проверки логов при завершении вагранта
    journalctl -u log_monitor.service
  SHELL
end
